package com.ibm.training;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.stream.annotation.StreamListener;
import org.springframework.messaging.Message;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Component;

@Component
public class OrderChecker {
	
	public static final Logger logger = LoggerFactory.getLogger(OrderChecker.class);
	
	@Autowired
	public OrderProcessor orderProcesser;
	
	public long max_amount = 500;
	
	@StreamListener("output")
	public void checkAndSortOrders(Order order) {
		logger.debug("ENTRY : checkAndSortOrders : order:"+order);
		
		if(order.getAmount() > 0) {
			order.setStatus("PROCESSED");
			orderProcesser.processed().send(message(order));
		} else {
			order.setStatus("CANCELLED");
			orderProcesser.cancelled().send(message(order));
		}
		
		logger.debug("EXIT : checkAndSortOrders : order"+order);
	}
	  private static final <T> Message<T> message(T val) {
		    return MessageBuilder.withPayload(val).build();
		  }

}
